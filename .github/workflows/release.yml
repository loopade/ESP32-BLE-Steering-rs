name: Build and Release ESP32 Firmware
permissions:
  contents: write
  
on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      
      - name: Install ESP32 Toolchain
        run: |
          mkdir ~/tmp && cd ~/tmp # It's a trick.
          source $HOME/.cargo/env
          sudo apt-get install git wget flex bison gperf python3 python3-pip python3-venv cmake ninja-build ccache libffi-dev libssl-dev libudev-dev
          echo "Installing espup..."
          cargo install espup
          espup install
          echo "Installing espflash..."
          cargo install cargo-espflash
          echo "Installing ldproxy..."
          cargo install ldproxy

      - name: Build Firmware
        run: |
          source $HOME/export-esp.sh
          cargo espflash save-image --release --chip esp32 target/xtensa-esp32-espidf/release/firmware.bin

      - name: Package Artifacts
        run: |
          mkdir dist
          cp $GITHUB_WORKSPACE/target/xtensa-esp32-espidf/release/firmware.bin dist/

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/*
          body: |
            Auto-generated ESP32 firmware release.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}